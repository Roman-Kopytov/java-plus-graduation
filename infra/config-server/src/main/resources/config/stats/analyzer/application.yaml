spring:
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/postgres
    username: admin
    password: admin

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: stats.aggregator
      auto-offset-reset: earliest
      poll-duration: 100
      message-fix-time: 50

      actions:
        bootstrap-servers: ${spring.kafka.consumer.bootstrap-servers}
        group-id: "${kafka.consumer.group-id}.actions"
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: ru.yandex.practicum.consumer.HubEventDeserializer
        topic: "stats.user-actions.v1"

      events:
        bootstrap-servers: ${spring.kafka.consumer.bootstrap-servers}
        group-id: "${kafka.consumer.group-id}.events"
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: ru.yandex.practicum.consumer.SnapshotDeserializer
        topic: "stats.events-similarity.v1"


  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true

grpc:
  client:
    analyzer:
      address: 'discovery:///analyzer'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext